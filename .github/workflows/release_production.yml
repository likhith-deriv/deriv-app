name: Deriv App Production Workflow
on:
  push:
    tags:
    - production.*
jobs:
  build_test_and_upload_artifact:
    name: Build, Test and upload artifacts 
    environment: Production
    runs-on: Runner_16cores_Deriv-app
    steps:
    - uses: actions/checkout@v4
    - uses: "./.github/actions/setup_node"
    - uses: "./.github/actions/npm_install_from_cache"
    - uses: "./.github/actions/build"
      with:
        NODE_ENV: production
        DATADOG_APPLICATION_ID: ${{ vars.DATADOG_APPLICATION_ID }} 
        DATADOG_CLIENT_TOKEN: ${{ vars.DATADOG_CLIENT_TOKEN }}
        DATADOG_CLIENT_TOKEN_LOGS: ${{ vars.DATADOG_CLIENT_TOKEN_LOGS }}
        DATADOG_SESSION_REPLAY_SAMPLE_RATE: ${{ vars.DATADOG_SESSION_REPLAY_SAMPLE_RATE }}
        DATADOG_SESSION_SAMPLE_RATE: ${{ vars.DATADOG_SESSION_SAMPLE_RATE }}
        DATADOG_SESSION_SAMPLE_RATE_LOGS: ${{ vars.DATADOG_SESSION_SAMPLE_RATE_LOGS }}
        GD_API_KEY: ${{ secrets.GD_API_KEY }}
        GD_APP_ID: ${{ secrets.GD_APP_ID }}
        GD_CLIENT_ID: ${{ secrets.GD_CLIENT_ID }}
        RUDDERSTACK_PRODUCTION_KEY: ${{ vars.RUDDERSTACK_STAGING_KEY }}
        RUDDERSTACK_URL: ${{ vars.RUDDERSTACK_URL }}
    - name: Run tests
      run: npm test
    - uses: "./.github/actions/versioning"
      with:
        version_name: production
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: packages/core

  publish_cloudflare_production:
    name: Publish to cloudflare Pages Production
    environment: Common
    runs-on: Runner_16cores_Deriv-app
    needs:
    - build_test_and_upload_artifact
    env:
      NODE_ENV: production

    steps:
    - uses: actions/checkout@v4
    - uses: "./.github/actions/setup_node"
    - uses: actions/download-artifact@v3.0.1
      with:
        path: packages
    - uses: "./.github/actions/publish_to_pages_production"
      with:
        version: $(echo cat packages/core/dist/version | bash)
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  send_slack_notification:
      name: Send Slack notification
      runs-on: Runner_16cores_Deriv-app
      environment: Common
      if: always()
      needs: [build_test_and_upload_artifact, publish_cloudflare_production]
      steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - uses: "./.github/actions/send_slack_notifications"
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
          release_type: Production 
          version: $(echo cat packages/core/dist/version | bash)
